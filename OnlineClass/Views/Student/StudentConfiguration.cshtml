@model Datalayer.BusinessLogic.StudentModel
@{

}
<style>
    .required:after {
        content: " *";
        color: Tomato;
    }

    .modal-footer {
        padding: 15px;
        text-align: center;
        border-top: 1px solid #e5e5e5;
    }

    .pac-container {
        z-index: 1051 !important;
    }
</style>
<div class=" row">
    <input type="hidden" id="datedata" />
    <input type="hidden" id="Teacherid" />
    <input type="hidden" id="TeacherStudentid" />
    <div class="col-md-3 col-sm-3 col-xs-6">
        <a data-toggle="tooltip" title="" class="well top-block" href="#" onclick="showstudent()">
            <i class="glyphicon glyphicon-user blue"></i>
            @*<i class="fas fa-user-graduate"></i>*@
            <div>Student </div>
            <div></div>

        </a>
    </div>


    <div class="col-md-3 col-sm-3 col-xs-6">
        <a data-toggle="tooltip" title="" class="well top-block" href="#" onclick="showstudentclassmap()">
            <i class="glyphicon glyphicon-user blue"></i>
            @*<i class="fas fa-user-graduate"></i>*@
            <div>Student Class Batch Map </div>
            <div></div>

        </a>
    </div>


    


</div>


<div class="row" id="studentConfiguration">
    <input type="hidden" id="studentype" name="studenttype" />
    <div class="box col-md-12">
        <div class="box-inner">
            <div class="box-header well" data-original-title="">
                <h2>Student Details</h2>
                <div class="box-icon">

                    <a href="" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#modalStudentForm">
                        <i class="glyphicon glyphicon-plus"></i>
                    </a>

                </div>
            </div>
            <div class="box-content">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Student Name</th>
                            <th>Email Id</th>
                            <th>Contact No.</th>
                            <th>Parent Name</th>
                            <th>Skype</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cls in ViewBag.StudentList)
                        {
                            <tr>
                                <td>@cls.Fname  @cls.Lname</td>

                                <td>@cls.Email</td>

                                <td>@cls.MobileNo</td>

                                <td>@cls.ParentName</td>
                                <td>@cls.Skype</td>
                                <td>


                                    <a href=#; onclick="GetStudentData(@cls.StudentId);">
                                        <i class="fa fa-edit" aria-hidden="true">Edit</i>
                                    </a>
                                </td>

                                <td>


                                    <a href=#; onclick="DeleteStudent(@cls.StudentId,'Student');">
                                        <i class="fa fa-trash" aria-hidden="true">Delete</i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <ul class="pagination pagination-centered">
                    <li><a href="#">Prev</a></li>
                    <li class="active">
                        <a href="#">1</a>
                    </li>
                    <li><a href="#">2</a></li>
                    <li><a href="#">3</a></li>
                    <li><a href="#">4</a></li>
                    <li><a href="#">Next</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>





<div class="box col-md-12" id="studentclassmapconfig">
    <div class="box-inner">
        <div class="box-header well" data-original-title="">
            <h2>Student  Mapping</h2>
            <div class="box-icon">

                <a href="" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#modalstudentmapping">
                    <i class="glyphicon glyphicon-plus"></i>
                </a>
            </div>

        </div>
        <div class="box-content">
            <table class="table">
                <thead>
                    <tr>


                        <th>Student Name</th>
                        <th>Batch</th>
                        <th>Subject</th>
                        <th>Duration</th>
                        <th>Period</th>


                    </tr>
                </thead>
                <tbody>

                    @foreach (var cls in ViewBag.Studentbatchsubject)
                    {
                        <tr>
                            <td>@cls.StudentName</td>
                            <td>@cls.batchName</td>
                            <td>@cls.SubName</td>
                            <td>@cls.Typename</td>
                            <td>@cls.Period</td>


                            <td>
                                <a href=#; onclick="GetStudentMap(@cls.Id);">
                                    <i class="fa fa-edit" aria-hidden="true">Edit</i>
                                </a>
                            </td>
                          
                        </tr>

                    }


                </tbody>
            </table>

        </div>
    </div>
</div>



@using (Html.BeginForm("SaveStudentSubjectBatchMap", "Student", FormMethod.Post))
{

    <div class="modal fade" id="modalstudentmapping" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Add Student</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-4 ">

                        @Html.HiddenFor(model => model.Id)
                        @Html.Label("Student")
                        @Html.DropDownListFor(e => e.StudentId, (SelectList)ViewBag.StudentName, "Select Student", new { @class = "form-control ddlStudent" , onchange = "loadClass(this.value)"})

                    </div>
                    <div class="md-form mb-4 ">

                        @Html.RadioButton("01", "true", new { onclick = "LoadBatch('Batch')", id = "bat" }) Batch
                        @Html.RadioButton("02", "false", new { onclick = "LoadBatch('Class')", id = "cla" }) Class
                    </div>
                    <div class="md-form mb-4 divbatch" style="display:none">


                        @Html.Label("Batch")
                        @Html.DropDownListFor(e => e.BatchId, (SelectList)ViewBag.DDLBatch, "Select Batch", new { @class = "form-control ddlbatch", onchange = "loadSubject(this.value,'Batch')" })

                    </div>
                    <div class="md-form mb-4 divClass" style="display:none">


                        @Html.Label("Class")
                        @*@Html.DropDownListFor(e => e.ClassId, (SelectList)ViewBag.ClassName, "Select Class", new { @class = "form-control ddlClass", onchange = "loadSubject(this.value,'Class')" })*@
                        <select id="ClassId" name="ClassId" class="form-control"  onchange = "loadSubject(this.value,'Class')"></select>
                    </div>
                    <div class="md-form mb-4 divSub" style="display:none">


                        @Html.Label("Subject")
                        <select id="Subjectid" name="Subjectid" class="form-control"></select>
                        @*@Html.DropDownListFor(e => e.SubjectName, null, "", new { @class = "form-control ddlSub" })*@


                    </div>
                    <div class="md-form mb-4 divType" style="display:none">


                        @Html.Label("Duration Type")
                        @Html.DropDownListFor(e => e.DurationId, (SelectList)ViewBag.DDlType, "Select Duration", new { @class = "form-control ddlType" })

                    </div>




                    <div class="md-form mb-4 divPeriod" style="display:none">


                        @Html.Label("Period")
                        @Html.TextBoxFor(model => model.Period, new { @class = "form-control" })

                    </div>





                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-deep-orange" type="submit">Submit</button>
                </div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("StudentDetail", "Student", FormMethod.Post, new { name = "student" }))
{


    @section Scripts
        {



        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAJuu90YmKip1Hybu8PO-arizWncuHnp9M&v=3.exp&signed_in=true&libraries=places"></script>
        <script type="text/javascript">
            var placeSearch, autocomplete;
            var componentForm = {
                //street_number: 'short_name',
                //route: 'long_name',
                //  locality: 'long_name',
                // administrative_area_level_2: 'long_name',
                administrative_area_level_1: 'long_name',
                country: 'long_name',
                postal_code: 'short_name'
            };
            google.maps.event.addDomListener(window, 'load', function () {
                //===========================Source==========================
                var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
                google.maps.event.addListener(places, 'place_changed', function () {
                    debugger
                    var place = places.getPlace();
                    console.log(place);
                    var address = place.formatted_address;
                    var value = address.split(",");
                    count = value.length;
                    country = value[count - 1];
                    administrative_area_level_1 = value[count - 2];
                    // administrative_area_level_2 = value[count - 3];
                    var z = administrative_area_level_1.split(" ");
                    //document.getElementById("Country").value = country;
                    var i = z.length;
                    //document.getElementById("City").value = city;
                    var latitude = place.geometry.location.lat();
                    var longitude = place.geometry.location.lng();
                    var mesg = address;
                    document.getElementById("Address").value = mesg;
                    var lati = latitude;
                    console.log(lati);
                    console.log(longi);
                    //document.getElementById("Origin_Lat").value = lati;
                    var longi = longitude;
                    //document.getElementById("Origin_Long").value = longi;
                    //GetAddress(lati, longi, 'FromPostCode');

                    console.log(place.address_components);
                    for (var i = 0; i < place.address_components.length; i++) {
                        var addressType = place.address_components[i].types[0];

                        if (componentForm[addressType]) {
                            var val = place.address_components[i][componentForm[addressType]];
                            document.getElementById(addressType).value = val;
                        }
                    }

                });
                //============================Destination========================

            });
        </script>

    }
    <div class="modal fade" id="modalStudentForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Add Student</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-4 ">

                        @Html.HiddenFor(model => model.studentId)
                        @Html.Label("First Name", null, new { @class = "required" })
                        @Html.TextBoxFor(model => model.Fname, new { @class = "form-control", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errFirst"></span>

                    </div>

                    <div class="md-form mb-4 ">


                        @Html.Label("Last Name", null, new { @class = "required" })

                        @Html.TextBoxFor(model => model.Lname, new { @class = "form-control", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errLast"></span>

                    </div>

                    <div class="md-form mb-4 ">


                        @Html.Label("Date of Birth", null, new { @class = "required" })

                        @Html.TextBoxFor(model => model.Dob, new { @class = "form-control datepicker" })
                        <span style="color:red;" id="errLast"></span>

                    </div>
                    <div class="md-form mb-4 ">


                        @Html.Label("Email Id", null, new { @class = "required" })
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errEmail"></span>

                    </div>

                    <div class="md-form mb-4 ">


                        @Html.Label("Contact No", null, new { @class = "required" })
                        @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errMobile"></span>

                    </div>

                    <div class="md-form mb-4">

                        @Html.Label("Class")

                        @Html.DropDownListFor(e => e.ClassId, (SelectList)ViewBag.ClassName, "Select Class", new { @class = "form-control ddlStuClass" })

                    </div>


                    <div class="md-form mb-4">


                        @Html.Label("Parent Name")
                        @Html.TextBoxFor(model => model.ParentName, new { @class = "form-control" })

                    </div>
                    <div class="md-form mb-4">


                        @Html.Label("Skype Id")
                        @Html.TextBoxFor(model => model.Skype, new { @class = "form-control" })

                    </div>

                    <div class="md-form mb-4">


                        @Html.Label("Complete Address")
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                        <span style="color:red;" id="errAddress"></span>
                    </div>
                    <div class="md-form mb-4">


                        @Html.Label("State")
                        @Html.TextBoxFor(model => model.administrative_area_level_1, new { @class = "form-control" })
                        <span style="color:red;" id="errState"></span>
                    </div>


                    <div class="md-form mb-4">


                        @Html.Label("Country")
                        @Html.TextBoxFor(model => model.country, new { @class = "form-control" })
                        <span style="color:red;" id="errState"></span>
                    </div>
                    <div class="md-form mb-4">


                        @Html.Label("Pincode ", null, new { @class = "required" })
                        @Html.TextBoxFor(model => model.postal_code, new { @class = "form-control" })
                        <span style="color:red;" id="errZipcode"></span>
                    </div>

                    <div class="md-form mb-4">


                        @Html.Label("User Name", null, new { @class = "required" })
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control ", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errUsername"></span>
                        <span id="Status"></span>

                    </div>
                    <div class="md-form mb-4 ">


                        @Html.Label("Password", null, new { @class = "required" })
                        @Html.PasswordFor(model => model.Pswd, new { @class = "form-control ", onchange = "CheckValidation()" })
                        <span style="color:red;" id="errfn"></span>

                    </div>
                    <div class="md-form mb-4 ">

                        @Html.Label("Confirm Password ", null, new { @class = "required" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", onchange = "CheckValidation()" })

                        <span style="color:red;" id="errConfirm"></span>
                    </div>


                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-deep-orange" type="submit" onclick="return CheckValidation();">Submit</button>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        $('#studentclassmapconfig').hide();
        $('#studentConfiguration').hide();
    });
   
    function showstudentclassmap() {

        $('#studentclassmapconfig').show();
        $('#studentConfiguration').hide();
       
    }

    function showstudent() {
        $('#studentclassmapconfig').hide();
        $('#studentConfiguration').show();
    }



function CheckValidation() {

      

      var  fName = document.getElementById("Fname").value;
       var lName = document.getElementById("Lname").value;
        var  Mnumber = document.getElementById("MobileNo").value;

      //  var  zcode = document.getElementById("postal_code").value;
    var pswd = document.getElementById("Pswd").value;
    var EmailId = $('#Email').val();
   // document.getElementById("Email").value;
        var userName1 = $('#Username').val();
        var conpswd = document.getElementById("ConfirmPassword").value;
        /////////////First Name/////////////////////////
        if (fName == '') {
            document.getElementById("errFirst").innerHTML = "Please Enter First name";

            document.getElementById("Fname").value ="";

            return false;
        }
        if (fName != '') {

            document.getElementById("errFirst").innerHTML = "";
        }
        /////////////Last Name/////////////////////////
        if (lName == '') {
            document.getElementById("errLast").innerHTML = "Please Enter Last name";
            document.getElementById("Lname").value = "";

            return false;
        }
        if (lName != '') {
            document.getElementById("errLast").innerHTML = "";
        }



        /////////////Email/////////////////////////
        if (EmailId == '') {
            document.getElementById("errEmail").innerHTML = "Please Enter Email";
            document.getElementById("Email").value = "";
           // document.getElementById("Email").focus();
          return false;
        }
        if (EmailId != '') {
            if (!isValidEmailAddress(EmailId)) {

                document.getElementById("errEmail").innerHTML = "Please provide a valid email address ";
                return false;
            }
            else
            {
                document.getElementById("errEmail").innerHTML = "";
            }

        }

        /////////////mobile no./////////////////////////
        if (Mnumber == '' && Mnumber.length<10) {
            document.getElementById("errMobile").innerHTML = "Please Enter 10 digit number ";
            document.getElementById("MobileNo").value = "";

            return false;
        }
        if (Mnumber != '' && Mnumber.length == 10) {

            document.getElementById("errMobile").innerHTML = "";
        }

        /////////////Username/////////////////////////
    if (userName1 == '') {
            document.getElementById("errUsername").innerHTML = "Please Provide UserName ";
            document.getElementById("errUsername").value = "";

            return false;
        }
    if (userName1 != '') {
            debugger
            var usr = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/
            if (document.student.UserName.value.match(usr)) {


                 $.ajax({
            type: "GET",
            url: '@Url.Action("CheckUserNamePassword", "Home")',
            datatype: "Json",
                     data: { username: userName1 },
            success: function (data) {

                if (data == null || data==0) {

                }
                else {
                    $("#UserName").css("border-color", "Red");
                    document.getElementById("errUsername").innerHTML = "UserName already Exist Try another!";
                    return false;
                }
            }
        });
            }
            else
            {
                document.getElementById("errUsername").innerHTML = "Please Provide UserName having 6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter";
            }

        }



        /////////////password/////////////////////////
        if (pswd == '') {
            document.getElementById("errPassword").innerHTML = "Please Provide Password ";
            document.document.getElementById("Pswd").value = "";

            return false;
        }
        if (pswd != '') {
            document.getElementById("errPassword").innerHTML = "";


        }


        /////////////Confirm password/////////////////////////
        if (conpswd == '') {
            document.getElementById("errConfirm").innerHTML = "Please Provide Confirm Password ";
            document.document.getElementById("ConfirmPassword").value = "";

            return false;
        }
        if (conpswd != '') {
            if (pswd == conpswd)
            {
               document.getElementById("errConfirm").innerHTML = "";
            }
            else
            {
                document.getElementById("errConfirm").innerHTML = "Password and Confirm Password should be same ";
                document.document.getElementById("ConfirmPassword").value = "";

                return false;

            }



        }
        }



        function GetStudentData(studentid) {

        debugger
              $.ajax({
            type: "GET",
            url: '@Url.Action("GetStudent", "Student")',
            datatype: "Json",
                  data: { StudentId: studentid },
                  success: function (data) {
                      debugger
                      $('#Fname').val(data[0].firstname),
                          $('#Lname').val(data[0].lastname),
                          $('#Email').val(data[0].email),
                          $('#MobileNo').val(data[0].mobile),
                          $('#Address').val(data[0].address),
                          $('#country').val(data[0].country),
                          $('#administrative_area_level_1').val(data[0].state),


                      $(".ddlStuClass").val(data[0].className[0].value);
                        //  $('#ClassId').val(data[0].className),
                          $('#Dob').val(data[0].dob),
                          $('#ParentName').val(data[0].parent),
                          $('#Skype').val(data[0].skype),

                          $('#postal_code').val(data[0].pin),

                          $('#studentId').val(studentid)
                      $('#modalStudentForm').modal('show');
            }

            });

    }


        function DeleteStudent(id, type) {

        var data1 = '@ViewBag.Message';

    $.ajax({
            type: "post",
            url: "@Url.Action("DeleteConfirmed", "Student")",
            ajaxasync: true,
        data: { Id:id, Tabletype: type },
        success: function (data) {


            var data1 = '@TempData["DeleteMsg"]';
            alertify.alert(data, function () { location.reload(); }).setHeader('Edu Solution');
                showClass();
            },
            error: function (data) {
                alert("something went wrong");
            }
        });
    }


        function EmailValid(email) {
            debugger
            // var email = document.getElementById("Email");
            // var filter = /^[_a-z0-9-]+(\.[_a-z0-9-]+)@@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/;
            var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            if (!filter.test(email.value)) {
             

                email.focus;
                return false;
            }
            return true;
        }

        function isValidEmailAddress(email) {
           var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
            return pattern.test(email);
        }




        




    function LoadBatch(obj) {
        if (obj == 'Batch') {
            // //debugger
            $(".divbatch").css('display', 'block');
            $(".divClass").css('display', 'none');
            $(".divSub").css('display', 'block');
            $(".divType").css('display', 'block');
            $(".divPeriod").css('display', 'block');

        }
        else if (obj == 'Class') {

            $(".divClass").css('display', 'block');
            $(".divbatch").css('display', 'none');
            $(".divSub").css('display', 'block');
            $(".divType").css('display', 'block');
            $(".divPeriod").css('display', 'block');
        }

    }





    function loadSubject(BatchClassId,str)
    {
       // alert(BatchClassId);
      debugger
         $.ajax({
            type: "GET",
            url: '@Url.Action("GetSubject", "Student")',
            datatype: "Json",
             data: { id: BatchClassId, type: str},
                  success: function (data) {
                     // //debugger

                      var s = '<option value="-1">Please Select a Subject</option>';
                      for (var i = 0; i < data.length; i++) {
                          s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                      }
                      $("#Subjectid").html(s);



            }

            });
    }






    function loadClass(stuid)
    {
       
         $.ajax({
            type: "GET",
            url: '@Url.Action("GetClass", "Student")',
            datatype: "Json",
             data: { id: stuid},
                  success: function (data) {
                     // //debugger

                     var s = '<option value="-1">Please Select a Class</option>';
                      for (var i = 0; i < data.length; i++) {
                          s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                      }
                      $("#ClassId").html(s);



            }

            });
    }





    function GetStudentMap(mapid) {

       
              $.ajax({
            type: "GET",
            url: '@Url.Action("GetStudentMapData", "Student")',
            datatype: "Json",
                  data: { Id: mapid },
                  success: function (data) {
                     debugger

                     // alert(data);

                      $(".ddlStudent").val(data[0].studentName[0].value);
                        //  $('#ClassId').val(data[0].className),
                      if (data[0].batchName[0] != null && data[0].subjectName[0] == null) {

                          radiobtn = document.getElementById("bat");
                          radiobtn.checked = true;
                          radiobtn1 = document.getElementById("cla");
                          radiobtn1.checked = false;
                          $(".divbatch").css('display', 'block');
                          $(".divClass").css('display', 'none');
                          $(".ddlbatch").val(data[0].batchName[0].value);
                          
                          $(".divSub").css('display', 'none');
                          

                      }
                      else if (data[0].batchName[0] ==null && data[0].subjectName[0] != null)
                      {
                          radiobtn1 = document.getElementById("bat");
                          radiobtn1.checked = false;
                          radiobtn = document.getElementById("cla");
                          radiobtn.checked = true;
                        
                          $(".divbatch").css('display', 'none');
                        
                         // $(".ddlClass").val(data[0].className[0].value);
                         // $('#ClassId').val(data[0].className[0].value);
                          var c = '<option value="' + data[0].className[0].value + '">' + data[0].className[0].text + '</option>';
                          $("#ClassId").html(c);
                          $(".divClass").css('display', 'block');
                          var s = '<option value="' + data[0].subjectName[0].value + '">' + data[0].subjectName[0].text + '</option>';
                          $("#Subjectid").html(s);
                          $(".divSub").css('display', 'block');
                      }
                     
                      $(".ddlType").val(data[0].planType[0].value);
                      if (data[0].planType[0].value == 1) {
                          $('#Period').val(data[0].period);
                          $(".divPeriod").css('display', 'block');
                      }
                      if (data[0].planType[0].value == 2 || data[0].planType[0].value == 3)
                      {
                          $(".divPeriod").css('display', 'none');
                      }
                     
                      $(".divType").css('display', 'block');
                    
                      $('#modalstudentmapping').modal('show');
            }

            });

    }
</script>